#This script generates figures associated with Figure 1 (Thoracic Injury)

#Load required packages

library('Seurat')
library('ggplot2')
library('plyr')
library('dplyr')
library('viridis')
library('ggthemes')
library('plotly')
library('cowplot')
library('scCustomize')
library('ggrepel')
library('org.Mm.eg.db')
library('clusterProfiler')
library('enrichplot')

#Set directory to load library (this will vary by the user)
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response")

#Load Seurat object
LMN_Final = readRDS("LMN_Final.rds")

#Set directory to store images (this will vary by the user)
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response/Figure_Panels")


### Generate Fig. 1B - Dimplots ###

Idents(LMN_Final) <- "seurat_clusters"

DimPlot(LMN_Final, reduction = "umap", label = FALSE, pt.size = 0.1, 
        label.size = 0, group.by =  "injury.status", alpha = 0.2, split.by = "injury.status",cols = c("#EB984E","#7FB3D5"),
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Figure_1_B.png",height = 4,width = 8,dpi = 300,units = "in")
DimPlot(LMN_Final, reduction = "umap", label = FALSE, pt.size = 0.1, 
        label.size = 0, group.by =  "injury.status", alpha = 0.2,cols = c("#EB984E","#7FB3D5"),
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Figure_1_B_2.png",height = 4,width = 4,dpi = 300,units = "in")


### Generate Fig. 1C - Histogram ###

#input data
lCST_data <- read.csv("lCST_DEGs.csv")

deg_data <- lCST_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X))

# Define common aesthetics with continuous fill based on avg_log2FC
common_aes <- aes(x=avg_log2FC, fill=avg_log2FC)

# Define the color scale
color_scale <- scale_fill_gradient2(low = "red", mid = "black", high = "green", 
                                    midpoint = 0, limit = c(-3, 3),
                                    breaks = c(-0.5, 0.5))

# Define common theme
common_theme <- theme_few() + theme(text = element_text(size = 20)) +
  theme(axis.text = element_text(size=20),
        axis.title = element_text(size=20, face="bold"),
        plot.title = element_text(size=20, hjust = 0.5))

# Adjust the size of the labels here
label_size <- 4.5  # Increase this value to make the labels larger

# Lower plot (zoomed-in version)
p1 <- ggplot(deg_data, common_aes) + 
  geom_histogram(boundary = 0.5, binwidth=0.5, aes(fill = ifelse(avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "Red", ifelse(avg_log2FC > 1 & plot_data$p_val_adj < 0.05, "Green", "Default"))), color="black", alpha=0.2, show.legend=FALSE) +
  scale_fill_manual(values = c("Red" = "red", "Green" = "green", "Default" = "black")) +
  geom_vline(xintercept = 0, color="black",alpha=0.2, linetype="dashed", linewidth=0.7) +
  #geom_vline(xintercept = c(-1, 1), color="grey", linetype="dashed", linewidth=0.7, alpha=0.5) +
  geom_vline(xintercept = 1, color="green", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_vline(xintercept = -1, color="red", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_text(boundary = 0.5, stat='bin', aes(label=ifelse(..count.. >= 1, ..count.., "")), angle = 90, vjust=0.5, hjust = 0, size=label_size, binwidth=0.5, color="black", 
            label.padding = unit(0.2, "lines"), label.size = 3, label.r = unit(0.15, "lines"), label.color = NA, fill="white") +
  xlab("Log2 Fold Change") + ylab("Number of Genes") +
  scale_x_continuous(breaks=seq(-6, 6, by=1), limits=c(-6, 6)) + 
  scale_y_continuous(breaks = seq(0, 400, by = 200)) +
  coord_cartesian(ylim = c(0, 400)) + 
  common_theme

# Upper plot
p2 <- ggplot(deg_data, common_aes) + 
  geom_histogram(boundary = 0.5, binwidth=0.5, aes(fill = ifelse(avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "Red", ifelse(avg_log2FC > 1 & plot_data$p_val_adj < 0.05, "Green", "Default"))), color="black", alpha=0.2, show.legend=FALSE) +
  scale_fill_manual(values = c("Red" = "red", "Green" = "green", "Default" = "black")) +
  geom_vline(xintercept = 0, color="black",alpha=0.2, linetype="dashed", linewidth=0.7) +
  geom_vline(xintercept = c(-1, 1), color="grey", linetype="dashed", linewidth=0.7, alpha=0.5) +
  geom_vline(xintercept = 1, color="green", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_vline(xintercept = -1, color="red", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_text(boundary = 0.5, stat='bin', aes(label=ifelse(..count.. >= 600, ..count.., "")), angle = 90, vjust=0.5, hjust = 0, size=label_size, binwidth=0.5, color="black",label.padding = unit(0.2, "lines"), label.size = 3, label.r = unit(0.15, "lines"), label.color = NA, fill="white") +
  coord_cartesian(ylim = c(1000, 13000)) + 
  common_theme +
  xlab("Log2 Fold Change") + ylab("Number of Genes") + 
  scale_x_continuous(breaks=seq(-6, 6, by=1), limits=c(-6, 6)) + 
  scale_y_continuous(breaks = seq(0,12000,by=3000)) +
  annotate("text", x=-1.5, y=7000, label="Downregulated", size=6, color="red", angle= 90) +
  annotate("text", x=1.5, y=7000, label="Upregulated", size=6, color="green", angle = 270) +
  annotate("text", x=0, y=12900, label="No Change", size=6, color="blue", angle = 0)

p3 <- p2 + 
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) 
p4 = p1 +
  theme(axis.title.y = element_blank(),axis.text.x= element_text(angle = 0)) 

# Combine the two plots with p1 at the bottom
combined_plot <- plot_grid(p3, p4, ncol=1, align='v', rel_heights = c(2/3, 1/3))
print(combined_plot)
ggsave("Figure_1C_Histogram.png",height = 5,width = 7,dpi = 300,units = "in",bg = "white")


### Generate Fig. 1D - MA plot ###

#input data
lCST_data <- read.csv("lCST_DEGs.csv")

plot_data <- lCST_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X))

#Select genes to label in the plot
plot_data$mark <- ''  # Reset the column
#selected Gene list
specific_genes = c("Creb5","Hrk","Npas4","Egr1","Dusp16")
#Unused in this plot: "Sox11" "Npas4" "Sprr1a","Atf3","Jun","Stmn4","Stat3","Etv1","Fgf1"

#Set text sizes

inset_text <- 8
axis_text_size <- 20
axis_label_size <- 20
gene_label_size <- 7

#Create plot

plot_data$mark[plot_data$X %in% specific_genes] <- 'specific_gene'
plot_data$average_expression <- rowMeans(plot_data[,c("pct.1", "pct.2")])
plot_data$color <- ifelse(plot_data$avg_log2FC >1 & plot_data$p_val_adj < 0.05, "green", ifelse(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "red", "grey"))
num_upregulated <- sum(plot_data$avg_log2FC > 1 & plot_data$p_val_adj < 0.05)
num_downregulated <- sum(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05)

ma_plot <- ggplot(plot_data, aes(x=average_expression, y=avg_log2FC, color=color)) +
  geom_point(alpha=0.5) +
  geom_point(data=plot_data[plot_data$mark == 'specific_gene',], aes(x=average_expression, y=avg_log2FC), color="black", size=3, shape=21, fill=plot_data[plot_data$mark == 'specific_gene',]$color) +  # Add bordered points for specific genes
  geom_text_repel(data = plot_data[plot_data$X %in% specific_genes, ], aes(label = X, x = average_expression, y = avg_log2FC), size=gene_label_size, box.padding = .5, point.padding = 0.5, segment.color = 'black',color = "black") +  # Use ggrepel
  scale_color_identity() +
  geom_hline(yintercept = 0, color="black", alpha=0.7, linetype="dashed") +
  geom_hline(yintercept = 1, color="green", linetype="dashed") +
  geom_hline(yintercept = -1, color="red", linetype="dashed") +
  xlab(expression(bold("Average Expression"))) + ylab(expression(bold("Log2 Fold Change"))) +
  theme_few() +
  theme(axis.text = element_text(size = axis_text_size)) +
  theme(axis.title = element_text(size = axis_label_size)) +
  scale_y_continuous(limits=c(-7, 7), breaks=seq(-7, 7, by=1)) +
  annotate("text", x = Inf, y = Inf, label = paste("Upregulated:", num_upregulated, "\nDownregulated:", num_downregulated), vjust=1.05, hjust=1.05, size=inset_text, color="black")
# Print the plot
print(ma_plot)

ggsave("Figure_1d_MA_Plot.png",height = 5,width = 7,dpi = 300,units = "in",bg = "white")


### Generate Fig. 1E - Heatmap ###

# A file was manually generated with the top 20 Upregulated and 20 Downregulated genes, min .pct threshold 0.05, saved as lCST_heatmap.csv
top_40_genes = read.csv("lCST_heatmap.csv")

heatmap_plot <- ggplot(top_40_genes, aes(x = reorder(top_40_genes[[1]], -avg_log2FC), y = 1, fill = avg_log2FC)) + 
  geom_tile(color = "white") +  # Adding white border to the tiles
  geom_text(aes(label = sprintf("%.2f", avg_log2FC)), vjust = 0.5, hjust = 0.5, color = "black", angle = 90) +
  scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0, limits = c(-4, 4)) +
  labs(x = "", y = "", fill = "Log2FC") +
  theme_few() + theme(text = element_text(size = 14)) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5,hjust = 1),
        axis.title.x = element_text(angle = 90, vjust = 0.5))
print(heatmap_plot)
ggsave("Figure_1E_Heatmap.png",height = 3,width = 7.5,dpi = 300,units = "in",bg = "white")


### Generate Fig. 1F - Creb5 feature plots ###
Idents<-"manual.clusters.1"
pal <- viridis(n = 10, option = "D")
FeaturePlot_scCustom(seurat_object = LMN_Final,pt.size = 0.1, features = "Creb5", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_1_F_full_Creb5.png",height = 8,width = 16,dpi = 300,units = "in")


### Generate Fig. 1G - Atf3 feature plots ###

pal <- viridis(n = 10, option = "D")
FeaturePlot_scCustom(seurat_object = LMN_Final,pt.size = 0.1, features = "Atf3", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_1_G_full_Atf3.png",height = 8,width = 16,dpi = 300,units = "in")



###########################################################################################################################################
# 
# SUPPLEMENTAL FIGURE 2

setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response/Figure_Panels/Sup_Fig_2")

#Generate Supplemental Figure 2A - Dimplot

#Generate Supplemental Figure 2B - Dotplot
DefaultAssay(LMN_Final)<-"RNA"
LMN_Final_DotPlot2=read.csv("LMN_Final_Dotplot2.csv")
Idents(LMN_Final) <- "manual.clusters.1"
top_markers <- LMN_Final_DotPlot2$Marker
library(RColorBrewer)
n <- 5 # Adjust based on your requirement
pal <- brewer.pal(n, "Spectral")
pal_inverted <- rev(pal)
plot_list =Clustered_DotPlot(LMN_Final,features = top_markers, colors_use_exp = pal_inverted, k=6,exp_color_max = 2,exp_color_min = -1,exp_color_middle = 0,split.by = "injury.status",show_parent_dend_line = F,cluster_feature = F,cluster_ident = F,x_lab_rotate = 90,color_seed = 1,row_label_size = 12,column_label_size = 12,flip = T)
plot_list [[2]]
png("cluster_dotplot_1.png",height =6,width = 14,res = 300,units ="in",bg = "white")
plot_list[[2]]
dev.off()

DefaultAssay(LMN_Final) <- "RNA"
LMN_Final_DotPlot2=read.csv("LMN_Final_Dotplot2.csv")
Idents(LMN_Final) <- "manual.clusters.1"
top_markers <- LMN_Final_DotPlot2$Marker
library(RColorBrewer)
n <- 10 # Adjust based on your requirement
pal <- brewer.pal(n, "Spectral")
pal_inverted <- rev(pal)
plot_list =Clustered_DotPlot(LMN_Final,features = top_markers, colors_use_exp = pal_inverted,exp_color_max = 2,exp_color_min = -1,exp_color_middle = 0,split.by = "injury.status",show_parent_dend_line = F,cluster_feature = F,cluster_ident = F,x_lab_rotate = 90,color_seed = 1,row_label_size = 12,column_label_size = 12,flip = T)
plot_list [[2]]
dev.off()


#Generate Supplemental Figure 2D - second dotplot
Idents(LMN_Final) <- "manual.clusters.2"
top_markers <- LMN_Final_DotPlot2$Marker
library(RColorBrewer)
n <- 10 # Adjust based on your requirement
pal <- brewer.pal(n, "Spectral")
pal_inverted <- rev(pal)
plot_list =Clustered_DotPlot(LMN_Final,features = top_markers, colors_use_exp = pal_inverted, k=6,exp_color_max = 2,exp_color_min = -1,exp_color_middle = 0,split.by = "injury.status",show_parent_dend_line = F,cluster_feature = F,cluster_ident = F,x_lab_rotate = 90,color_seed = 1,row_label_size = 12,column_label_size = 12,flip = T)
plot_list [[2]]
png("cluster_dotplot_2.png",height =6,width = 14,res = 300,units ="in",bg = "white")
plot_list[[2]]
dev.off()

Clustered_DotPlot(LMN_Final,features = top_markers, colors_use_exp = pal_inverted, k=6,exp_color_max = 2,exp_color_min = -1,exp_color_middle = 0,split.by = "injury.status",show_parent_dend_line = F,cluster_feature = F,cluster_ident = F,x_lab_rotate = 90,color_seed = 1,row_label_size = 12,column_label_size = 12,flip = T)

#Plot_de(LMN_Final, features = c("Crym", "Sim1", "Ttc6", "Carpt", "Crh", "Pard3b"))
pal_C <- viridis(n = 10, option = "D")
FeaturePlot_scCustom(seurat_object = LMN_Final,pt.size = 1, features = c("Crym", "Sim1", "Ttc6", "Crh", "Pard3b"), colors_use = pal_C,order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Sup_Fig_1_F.png",height = 12,width = 8,dpi = 300,units = "in",bg = "white")



###########################################################################################################################################
# 
# SUPPLEMENTAL FIGURE 3

setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response/Figure_Panels/Sup_Fig_3")

#####Generate Supp Fig 3 - Dimplot
Idents(LMN_Final) <- "manual.clusters.2"

DimPlot(LMN_Final, reduction = "umap", label = TRUE, pt.size = 1, 
        label.size = 0, group.by =  "manual.clusters.2", cols = c("darkgrey","black","red","purple","green","blue"),alpha = 0.3,
        order = FALSE
) + NoLegend() + NoAxes() 


#####Generate Supp Fig 3 - MA plots

setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response/Figure_Panels/Sup_Fig_3")


#Input data
LMN_All <- read.csv("LMN_MA_All.csv")
LMN_CST <- read.csv("LMN_MA_CST.csv")
LMN_HYP <- read.csv("LMN_MA_HYP.csv")
LMN_RN <- read.csv("LMN_MA_RN.csv")
LMN_DP <- read.csv("LMN_MA_DP.csv")
LMN_MED <- read.csv("LMN_MA_MED.csv")

#Select which data to plot - be sure to select the corresponding name in the ggsave command below
#deg_data <- LMN_All
deg_data <- LMN_CST
#deg_data <- LMN_HYP
#deg_data <- LMN_RN
#deg_data <- LMN_DP
#deg_data <- LMN_MED

plot_data <- deg_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X),!grepl("CAG", X),!grepl("H2B", X),!grepl("80B", X))

#Select genes to label in the plot

plot_data$mark <- ''  # Reset the column
#selected Gene list
specific_genes = c("Creb5")
#Total set: "Sox11" "Npas4" "Sprr1a",Atf3","Jun","Stmn4","Stat3","Etv1","Fgf1"


#Set text sizes
inset_text <- 6.6
axis_text_size <- 18
axis_label_size <- 18
gene_label_size <- 6

#Create plot

plot_data$mark[plot_data$X %in% specific_genes] <- 'specific_gene'
plot_data$average_expression <- rowMeans(plot_data[,c("pct.1", "pct.2")])
plot_data$color <- ifelse(plot_data$avg_log2FC >1 & plot_data$p_val_adj < 0.05, "green", ifelse(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "red", "grey"))
num_upregulated <- sum(plot_data$avg_log2FC > 1 & plot_data$p_val_adj < 0.05)
num_downregulated <- sum(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05)

ma_plot <- ggplot(plot_data, aes(x=average_expression, y=avg_log2FC, color=color)) +
  geom_point(alpha=0.5) +
  geom_point(data=plot_data[plot_data$mark == 'specific_gene',], aes(x=average_expression, y=avg_log2FC), color="black", size=3, shape=21, fill=plot_data[plot_data$mark == 'specific_gene',]$color) +  # Add bordered points for specific genes
  geom_text_repel(data = plot_data[plot_data$X %in% specific_genes, ], aes(label = X, x = average_expression, y = avg_log2FC), size=gene_label_size, box.padding = .5, point.padding = 0.5, segment.color = 'black',color = "black") +  # Use ggrepel
  scale_color_identity() +
  geom_hline(yintercept = 0, color="black", alpha=0.7, linetype="dashed") +
  geom_hline(yintercept = 1, color="green", linetype="dashed") +
  geom_hline(yintercept = -1, color="red", linetype="dashed") +
  xlab("Average Expression") + ylab("Log2 Fold Change") +
  theme_few() +
  theme(axis.text = element_text(size = axis_text_size)) +
  theme(axis.title = element_text(size = axis_label_size)) +
  scale_y_continuous(limits=c(-7, 7), breaks=seq(-7, 7, by=2)) +
  annotate("text", x = Inf, y = Inf, label = paste("Upregulated:", num_upregulated, "\nDownregulated:", num_downregulated), vjust=1.05, hjust=1.05, size=inset_text, color="black")
# Print the plot
print(ma_plot)

#Save the plot (select the correct name, matched to which dataset is inputed above)
ggsave("Supp_Fig_3/MA_CST.png",height = 3.6,width = 4.75,dpi = 300,units = "in",bg = "white")


#####Generate Supp Fig 3 - Barplot
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_1_Lumbar_Injury_Response/Figure_Panels/Sup_Fig_3")

# Load csv containing values to plot
data <- read.csv('Sup_Fig_3_Barplot.csv')

# Create the plot
ggplot(data, aes(x = Cluster, y = Regulation, fill = ifelse(Regulation > 0, 'Upregulated', 'Downregulated'))) +
  geom_bar(stat = "identity", position = "identity",alpha=0.5) +
  scale_fill_manual(values = c('Upregulated' = 'green', 'Downregulated' = 'red')) +
  theme_classic() +
  labs(y = "", x = "", title = "", fill = "") +
  geom_hline(yintercept = 0, linetype = "dashed")  +
  geom_text(aes(label = Regulation), vjust = 0.5, size=6)+ # Add values on the bars
  coord_flip() + scale_y_continuous(limits = c(-160,NA)) + # Use this if you want to flip the axes
  theme(text = element_text(size = 22,color = "black"))  # Apply global text size
ggsave("Sup_Fig_3_Barplot.png",units = "in",width = 6,height = 5,dpi = 300)



