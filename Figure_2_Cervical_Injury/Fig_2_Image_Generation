#This script creates images associated with Figure 2 (cervical CST injury response)
#as well as associated data in Supplemental Figure 4 ("high Creb5 CST response)


#Load the required libraries

library('Seurat')
library('ggplot2')
library('plyr')
library('dplyr')
library('viridis')
library('scCustomize')
library('ggthemes')
library('plotly')
library('cowplot')
library('ggrepel')

#Set directory to load library (this will vary by the user)
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_2_cSCI_Injury")

#load your RDS file
cSCI_merge <- readRDS("cSCI_merge.rds")

#Set directory to store images (this will vary by the user)
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_2_cSCI_Injury/Figure_Panels")


#Generate Figure 2B - dimplots

DimPlot(cSCI_merge, reduction = "umap", label = FALSE, pt.size = 1, 
        label.size = 0, group.by =  "injury.status", cols = c("#EB984E","#7FB3D5"),alpha = 0.3, split.by = "injury.status",
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Figure_2_B.png",height = 3,width = 5,dpi = 300,units = "in")

DimPlot(cSCI_merge, reduction = "umap", label = FALSE, pt.size = 1, 
        label.size = 0, group.by =  "injury.status", cols = c("#EB984E","#7FB3D5"),alpha = 0.3,
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Figure_2_B_2.png",height = 3,width = 3,dpi = 300,units = "in")

#Generate Figure 2C - feature plots


pal <- viridis(n = 10, option = "D")

FeaturePlot_scCustom(seurat_object = cSCI_merge,pt.size = 1, features = "Creb5", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_2_C_Creb5.png",height = 4,width = 8,dpi = 300,units = "in")

FeaturePlot_scCustom(seurat_object = cSCI_merge,pt.size = 1, features = "Fezf2", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_2_C_Fezf2.png",height = 4,width = 8,dpi = 300,units = "in")

FeaturePlot_scCustom(seurat_object = cSCI_merge,pt.size = 1, features = "Bcl11b", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_2_C_Bcl11b.png",height = 4,width = 8,dpi = 300,units = "in")

FeaturePlot_scCustom(seurat_object = cSCI_merge,pt.size = 1, features = "Crym", colors_use = pal,split.by = "injury.status", order = T) & NoAxes() + theme(axis.text = element_text(size = 20),text = element_text (size = 20))
ggsave("Figure_2_C_Crym.png",height = 4,width = 8,dpi = 300,units = "in")

#Generate Figure 2D - Histogram

cerv_CST_data <- read.csv("cCST_ALL_DEG.csv")

plot_data <- cerv_CST_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X))

# Define common aesthetics with continuous fill based on avg_log2FC
common_aes <- aes(x=avg_log2FC, fill=avg_log2FC)

# Define the color scale
color_scale <- scale_fill_gradient2(low = "red", mid = "black", high = "green", 
                                    midpoint = 0, limit = c(-3, 3),
                                    breaks = c(-0.5, 0.5))

# Define common theme
common_theme <- theme_few() + theme(text = element_text(size = 20)) +
  theme(axis.text = element_text(size=20),
        axis.title = element_text(size=20, face="bold"),
        plot.title = element_text(size=20, hjust = 0.5))

# Adjust the size of the labels here
label_size <- 4.5  # Increase this value to make the labels larger

# Lower plot (zoomed-in version)
p1 <- ggplot(plot_data, common_aes) + 
  geom_histogram(boundary = 0.5, binwidth=0.5, aes(fill = ifelse(avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "Red", ifelse(avg_log2FC > 1 & plot_data$p_val_adj < 0.05, "Green", "Default"))), color="black", alpha=0.2, show.legend=FALSE) +
  scale_fill_manual(values = c("Red" = "red", "Green" = "green", "Default" = "black")) +
  geom_vline(xintercept = 0, color="black",alpha=0.2, linetype="dashed", linewidth=0.7) +
  #geom_vline(xintercept = c(-1, 1), color="grey", linetype="dashed", linewidth=0.7, alpha=0.5) +
  geom_vline(xintercept = 1, color="green", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_vline(xintercept = -1, color="red", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_text(boundary = 0.5, stat='bin', aes(label=ifelse(..count.. >= 1, ..count.., "")), angle = 90, vjust=0.5, hjust = 0, size=label_size, binwidth=0.5, color="black", 
            label.padding = unit(0.2, "lines"), label.size = 3, label.r = unit(0.15, "lines"), label.color = NA, fill="white") +
  xlab("Log2 Fold Change") + ylab("Number of Genes") +
  scale_x_continuous(breaks=seq(-6, 6, by=1), limits=c(-6, 6)) + 
  scale_y_continuous(breaks = seq(0, 400, by = 200)) +
  coord_cartesian(ylim = c(0, 400)) + 
  common_theme

# Upper plot
p2 <- ggplot(plot_data, common_aes) + 
  geom_histogram(boundary = 0.5, binwidth=0.5, aes(fill = ifelse(avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "Red", ifelse(avg_log2FC > 1 & plot_data$p_val_adj < 0.05, "Green", "Default"))), color="black", alpha=0.2, show.legend=FALSE) +
  scale_fill_manual(values = c("Red" = "red", "Green" = "green", "Default" = "black")) +
  geom_vline(xintercept = 0, color="black",alpha=0.2, linetype="dashed", linewidth=0.7) +
  geom_vline(xintercept = c(-1, 1), color="grey", linetype="dashed", linewidth=0.7, alpha=0.5) +
  geom_vline(xintercept = 1, color="green", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_vline(xintercept = -1, color="red", linetype="dashed", linewidth=0.7, alpha=0.5)+
  geom_text(boundary = 0.5, stat='bin', aes(label=ifelse(..count.. >= 600, ..count.., "")), angle = 90, vjust=0.5, hjust = 0, size=label_size, binwidth=0.5, color="black",label.padding = unit(0.2, "lines"), label.size = 3, label.r = unit(0.15, "lines"), label.color = NA, fill="white") +
  coord_cartesian(ylim = c(1000, 14000)) + 
  common_theme +
  xlab("Log2 Fold Change") + ylab("Number of Genes") + 
  scale_x_continuous(breaks=seq(-6, 6, by=1), limits=c(-6, 6)) + 
  scale_y_continuous(breaks = seq(0,15000,by=3000)) +
  annotate("text", x=-1.5, y=7000, label="Downregulated", size=6, color="red", angle= 90) +
  annotate("text", x=1.5, y=7000, label="Upregulated", size=6, color="green", angle = 270) +
  annotate("text", x=0, y=13500, label="No Change", size=6, color="blue", angle = 0)

p3 <- p2 + 
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) 
p4 = p1 +
  theme(axis.title.y = element_blank(),axis.text.x= element_text(angle = 0)) 

# Combine the two plots with p1 at the bottom
combined_plot <- plot_grid(p3, p4, ncol=1, align='v', rel_heights = c(2/3, 1/3))
print(combined_plot)
ggsave("Figure_2D_Histogram_1.png",height = 5,width = 7,dpi = 300,units = "in",bg = "white")



### Generate Fig. 2E - MA plot ###


#Input data
cerv_CST_data <- read.csv("cCST_ALL_DEG.csv")

plot_data <- cerv_CST_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X))

#Select genes to label in the plot

plot_data$mark <- ''  # Reset the column
#selected Gene list
specific_genes = c("Creb5","Hrk","Npas4","Egr1","Dusp16")
#Total set: "Sox11" "Npas4" "Sprr1a","Atf3","Jun","Stmn4","Stat3","Etv1","Fgf1"


#Set text sizes
inset_text <- 8
axis_text_size <- 20
axis_label_size <- 20
gene_label_size <- 7

#Create plot

plot_data$mark[plot_data$X %in% specific_genes] <- 'specific_gene'
plot_data$average_expression <- rowMeans(plot_data[,c("pct.1", "pct.2")])
plot_data$color <- ifelse(plot_data$avg_log2FC >1 & plot_data$p_val_adj < 0.05, "green", ifelse(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05, "red", "grey"))
num_upregulated <- sum(plot_data$avg_log2FC > 1 & plot_data$p_val_adj < 0.05)
num_downregulated <- sum(plot_data$avg_log2FC < -1 & plot_data$p_val_adj < 0.05)

ma_plot <- ggplot(plot_data, aes(x=average_expression, y=avg_log2FC, color=color)) +
  geom_point(alpha=0.5) +
  geom_point(data=plot_data[plot_data$mark == 'specific_gene',], aes(x=average_expression, y=avg_log2FC), color="black", size=3, shape=21, fill=plot_data[plot_data$mark == 'specific_gene',]$color) +  # Add bordered points for specific genes
  geom_text_repel(data = plot_data[plot_data$X %in% specific_genes, ], aes(label = X, x = average_expression, y = avg_log2FC), size=gene_label_size, box.padding = .5, point.padding = 0.5, segment.color = 'black',color = "black") +  # Use ggrepel
  scale_color_identity() +
  geom_hline(yintercept = 0, color="black", alpha=0.7, linetype="dashed") +
  geom_hline(yintercept = 1, color="green", linetype="dashed") +
  geom_hline(yintercept = -1, color="red", linetype="dashed") +
  xlab(expression(bold("Average Expression"))) + ylab(expression(bold("Log2 Fold Change"))) +
  theme_few() +
  theme(axis.text = element_text(size = axis_text_size)) +
  theme(axis.title = element_text(size = axis_label_size)) +
  scale_y_continuous(limits=c(-7, 7), breaks=seq(-7, 7, by=1)) +
  annotate("text", x = Inf, y = Inf, label = paste("Upregulated:", num_upregulated, "\nDownregulated:", num_downregulated), vjust=1.05, hjust=1.05, size=inset_text, color="black")
# Print the plot
print(ma_plot)

ggsave("Figure_2E_MA_Plot.png",height = 5,width = 5,dpi = 300,units = "in",bg = "white")



### Generate Fig. 2F - Heatmap ###


# A file was manually generated with the top 20 Upregulated and 20 Downregulated genes, min .pct threshold 0.05, saved as lCST_heatmap.csv
top_40_genes = read.csv("cCST_ALL_heatmap.csv")

heatmap_plot <- ggplot(top_40_genes, aes(x = reorder(top_40_genes[[1]], avg_log2FC), y = 1, fill = avg_log2FC)) + 
  geom_tile(color = "white") +  # Adding white border to the tiles
  geom_text(aes(label = sprintf("%.2f", avg_log2FC)), vjust = 0.5, hjust = 0.5, color = "black", angle = 90) +
  scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0, limits = c(-4, 4)) +
  labs(x = "", y = "", fill = "Log2FC") +
  theme_few() + theme(text = element_text(size = 14)) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5,hjust = 1),
        axis.title.x = element_text(angle = 90, vjust = 0.5))
print(heatmap_plot)
ggsave("Figure_2F_Heatmap.png",height = 4,width = 7.5,dpi = 300,units = "in",bg = "white")


############################################################################################

### Generate Supp_Fig_4 - Dimplots ###
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_2_cSCI_Injury/Figure_Panels/Sup_Fig_4")

Idents(cSCI_merge) <- "seurat_clusters"

DimPlot(cSCI_merge, reduction = "umap", label = FALSE, pt.size = 1, 
        label.size = 0, group.by =  "injury.status.2", cols = c("#EB984E","#7FB3D5","#9F68FA"),alpha = 0.3, split.by = "injury.status.2",
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Sup_Fig_4_Dimplot1.png",height = 3,width = 5,dpi = 300,units = "in")

DimPlot(cSCI_merge, reduction = "umap", label = FALSE, pt.size = 1, 
        label.size = 0, group.by =  "injury.status.2", cols = c("#EB984E","#7FB3D5","#9F68FA"),alpha = 0.3,
        order = FALSE
) + NoLegend() + NoAxes() 
ggsave("Sup_Fig_4_Dimplot1.png",height = 3,width = 3,dpi = 300,units = "in")


### Generate Supp_Fig_4 - MA plots ###

setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_2_cSCI_Injury/Figure_Panels/Sup_Fig_4")

#Input data

#Select which data to plot by silencing other two commands
#deg_data <- read.csv("cCST_ALL_DEG.csv")
#deg_data <- read.csv("cCST_hCreb_DEG.csv")
deg_data <- read.csv("cCST_lCreb_DEG.csv")


plot_data <- deg_data %>%
  filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X),!grepl("CAG", X),!grepl("H2B", X),!grepl("80B", X))

#Select genes to label in the plot

plot_data$mark <- ''  # Reset the column
#selected Gene list
specific_genes = c("Creb5","Hrk","Npas4","Egr1","Dusp16","Ddit3","Trib3","Bbc3","Eif2ak3")
#Total set: "Sox11" "Npas4" "Sprr1a"


#Set text sizes
inset_text <- 5.5
axis_text_size <- 15
axis_label_size <- 18
gene_label_size <- 5

#Create plot

plot_data$mark[plot_data$X %in% specific_genes] <- 'specific_gene'
plot_data$average_expression <- rowMeans(plot_data[,c("pct.1", "pct.2")])
plot_data$color <- ifelse(plot_data$avg_log2FC >0.5 & plot_data$p_val_adj < 0.05, "green", ifelse(plot_data$avg_log2FC < -0.5 & plot_data$p_val_adj < 0.05, "red", "grey"))
num_upregulated <- sum(plot_data$avg_log2FC > 0.5 & plot_data$p_val_adj < 0.05)
num_downregulated <- sum(plot_data$avg_log2FC < -0.5 & plot_data$p_val_adj < 0.05)

ma_plot <- ggplot(plot_data, aes(x=average_expression, y=avg_log2FC, color=color)) +
  geom_point(alpha=0.5) +
  geom_point(data=plot_data[plot_data$mark == 'specific_gene',], aes(x=average_expression, y=avg_log2FC), color="black", size=3, shape=21, fill=plot_data[plot_data$mark == 'specific_gene',]$color) +  # Add bordered points for specific genes
  geom_text_repel(data = plot_data[plot_data$X %in% specific_genes, ], aes(label = X, x = average_expression, y = avg_log2FC), size=gene_label_size, box.padding = .5, point.padding = 0.5, segment.color = 'black',color = "black") +  # Use ggrepel
  scale_color_identity() +
  geom_hline(yintercept = 0, color="black", alpha=0.7, linetype="dashed") +
  geom_hline(yintercept = 0.5, color="green", linetype="dashed") +
  geom_hline(yintercept = -0.5, color="red", linetype="dashed") +
  xlab("Average Expression") + ylab("Log2 Fold Change") +
  theme_few() +
  theme(axis.text = element_text(size = axis_text_size)) +
  theme(axis.title = element_text(size = axis_label_size)) +
  scale_y_continuous(limits=c(-7, 7), breaks=seq(-7, 7, by=1)) +
  annotate("text", x = Inf, y = Inf, label = paste("Upregulated:", num_upregulated, "\nDownregulated:", num_downregulated), vjust=1.05, hjust=1.02, size=inset_text, color="black")
# Print the plot
print(ma_plot)

#Save the plot (select the correct name, matched to which dataset is inputed above)
#ggsave("Sup_4_CST_AllCreb_MA.png",height = 3.8,width = 5,dpi = 300,units = "in",bg = "white")
#ggsave("Sup_4_CST_hCreb_MA.png",height = 3.8,width = 5,dpi = 300,units = "in",bg = "white")
ggsave("Sup_4_CST_lCreb_MA.png",height = 3.8,width = 5,dpi = 300,units = "in",bg = "white")



### Generate Supp_Fig_4 - GO plots ###
setwd("C:/Users/blackmorem/Dropbox/Single cell injury paper/!JAN_2024/!FINAL_ANALYSES/Fig_2_cSCI_Injury/Figure_Panels/Sup_Fig_4")


#Select the input list
go_input = read.csv("cCST_hCreb_DEG.csv")

#Filter the input list - the "Rik" and other filters should not be needed, but the log2FC and p_val are important
go_input = go_input %>% filter(!grepl("Rik", X), !grepl("^Gm", X),!grepl("Grik", X),
                               !grepl("CAG", X),!grepl("H2B", X),!grepl("80B", X),!grepl("BC0", X),
                               !grepl("AAV", X))

#Set thresholds for GO analysis (adjust the vales for the up and downregulated) 

go_input = go_input %>% filter(go_input$avg_log2FC > -0.58 & go_input$p_val_adj < 0.05) 

#Translate gene symbols into EntrizID
my.symbols = go_input$X
Entrezid=AnnotationDbi::select(org.Mm.eg.db, keys = my.symbols,columns = c("ENTREZID", "SYMBOL"),keytype = "SYMBOL") # converting your gene name to ENTREZID
Embryo_annotation=Entrezid$ENTREZID #extrating only your entrezid for the input
genelist=sort(Embryo_annotation,decreasing = TRUE) #sorting the ID
genelist=na.omit(genelist) # removing the Null values

#create background set
background = read.csv("Background_GO.csv")
background.symbols = background$X
Background_Entrezid=AnnotationDbi::select(org.Mm.eg.db, keys = background.symbols,columns = c("ENTREZID", "SYMBOL"),keytype = "SYMBOL")
Background_annotation=Background_Entrezid$ENTREZID
Background_annotation = sort(Background_annotation,decreasing=TRUE)
Background_annotation=na.omit(Background_annotation)

ego=enrichGO(gene = genelist,universe = Background_annotation,OrgDb = org.Mm.eg.db,
             ont = "all", readable = TRUE, minGSSize = 3, maxGSSize = 500,pvalueCutoff = 0.05)

ego=enrichGO(gene = genelist,OrgDb = org.Mm.eg.db,
             ont = "all", readable = TRUE, minGSSize = 3, maxGSSize = 500,pvalueCutoff = 0.05)


dotplot(ego)

ego_2 <- simplify(ego, cutoff=0.7, by="p.adjust", select_fun=min, measure="Wang")

dotplot(ego_2)

#write.csv(ego_2,"EGO_IC_1d_-0.58.csv")
write.csv(ego_2,"EGO_hCreb5_-0.58.csv")
#write.csv(ego_2,"EGO_IC_7d_-0.58.csv")

data=read.csv ("EGO_hCreb5_0.58.csv")
#data=ego_2@result
data = data %>%
  mutate(Gene_Ratio = as.numeric(sub("(.*)/.*", "\\1", GeneRatio)) / 
           as.numeric(sub(".*/(.*)", "\\1", GeneRatio)))
processed_data <- data %>%
  filter(ONTOLOGY == "BP") %>%
  arrange(p.adjust, desc(Count))


processed_data=head(processed_data,15)

#plot data

library(ggplot2)
library(viridis)
ggplot(processed_data, aes(x = Gene_Ratio, y = reorder(Description, Gene_Ratio), size = Count, color = p.adjust)) +
  geom_point(alpha = 0.7) +
  scale_color_viridis(option = "D") + # color D for Up-regulated and F for Down-regulated
  theme_classic() +
  theme(text = element_text(color = "black", size = 12,face = "bold"), #family = "Times New Roman"),
        axis.text.y = element_text(color = "black",size = 15), # Adjust text alignment and size as needed
        axis.title = element_text(color = "black"),
        axis.text.x = element_text(color = "black",angle = 90),
        legend.title = element_text(color = "black"),
        legend.text = element_text(color = "black")) +
  labs(title = "",
       x = "Gene Ratio",
       y = "",
       color = "P-adjust Value",
       size = "Count")+
  scale_y_discrete(labels = label_wrap_gen(width = 35))

#Select the file name to generate depending on whether up or down-regulated genes were selected above
#ggsave("Sup_Fig_4_hCreb5_up_GO.png",height = 8.5, width = 7.3,dpi = 300,units = "in",bg = "white")
ggsave("Sup_Fig_4_hCreb5_down_GO.png",height = 8.5, width = 7.3,dpi = 300,units = "in",bg = "white")
